version: '3'
services:
  web:
    image: minha-app-python:3.0
    container_name: 'site1'
    build: .
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
    cpus: '0.1' #usar 10% de um nucleo
    mem_limit: '128mb' #usar somente 128mb
    networks:
      - 'intranet'
      - "rede_proxy"
    depends_on:
      - db
    expose:
      - '5000'
  web2:
    image: site2:1.0
    container_name: site2
    volumes:
      - .:./app2
    networks:
      - 'intranet'
      - "rede_proxy"
    expose:
      - "5000"  # Expondo a porta internamente
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"  # Expor a porta 80 para a web
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - rede_proxy
  db:
    image: postgres:16.4
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: meu_app
    cpus: '0.1'
    mem_limit: '128mb'
    volumes:
      - pgdata:/var/lib/postgresql/data  # Correção aqui, o volume é um mapeamento
    networks:
      -  'intranet'
    expose:
      - "5432" # maneira segura de liberar acesso aos demais containers, sem expor a porta ao publico.
volumes:
  pgdata:  # Definindo o volume aqui corretamente como mapeamento

networks:
  intranet:
    name: 'intranet'
  rede_proxy:
    driver: bridge