version: '3'
services:
  web:
    image: site1:1.0
    container_name: 'site1'
    build: ./site1
    volumes:
      - ./site1:/app
    environment:
      - FLASK_ENV=development
    cpus: '0.1' #usar 10% de um nucleo
    mem_limit: '128mb' #usar somente 128mb
    networks:
      - rede_proxy
      - intranet
      - monitoring_network
    depends_on:
      - db
    expose:
      - '5000'
  web2:
    image: site2:1.0
    build: ./site2
    container_name: "site2"
    volumes:
      - ./site2:/app
    environment:
      - FLASK_ENV=development
    cpus: '0.1' #usar 10% de um nucleo
    mem_limit: '128mb' #usar somente 128mb
    networks:
      - rede_proxy
      - intranet
      - monitoring_network
    depends_on:
      - db
    expose:
      - "5000"  # Expondo a porta internamente
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"  # Expor a porta 80 para a web
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - rede_proxy
      - monitoring_network
  db:
    image: postgres:16.4
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: meu_app
    cpus: '0.1'
    mem_limit: '128mb'
    volumes:
      - pgdata:/var/lib/postgresql/data  # Correção aqui, o volume é um mapeamento
    networks:
      - intranet
      - monitoring_network
    expose:
      - "5432" # maneira segura de liberar acesso aos demais containers, sem expor a porta ao publico.
  pg_exporter:
    image: wrouesnel/postgres_exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@db:5432/meu_app?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - monitoring_network
      - intranet  # Rede para acessar o banco de dados

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring_network

volumes:
  pgdata:  # Definindo o volume aqui corretamente como mapeamento
  
networks:
  intranet:
    driver: bridge 
  rede_proxy:
    driver: bridge
  monitoring_network:
    driver: bridge